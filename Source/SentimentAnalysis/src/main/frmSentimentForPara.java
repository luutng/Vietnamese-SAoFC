/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

/**
 *
 * @author luu
 */
public class frmSentimentForPara extends javax.swing.JFrame {

    /**
     * Creates new form frmSentimentForPara
     */
    public frmSentimentForPara() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpData = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaTest = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaClean = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbResults = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSentence = new javax.swing.JTextArea();
        cbSubjectivity = new javax.swing.JCheckBox();
        cbPassive = new javax.swing.JCheckBox();
        cbPositive = new javax.swing.JCheckBox();
        cbNegative = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        cbTypeData = new javax.swing.JComboBox();
        btnFile = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();
        btnAnalyze = new javax.swing.JButton();
        jpResults = new javax.swing.JPanel();
        jpSubjectivity = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbSub = new javax.swing.JLabel();
        lbPas = new javax.swing.JLabel();
        lbSenSub = new javax.swing.JLabel();
        lbPerSub = new javax.swing.JLabel();
        lbPerPas = new javax.swing.JLabel();
        lbAttSub = new javax.swing.JLabel();
        jpSentiment = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbPos = new javax.swing.JLabel();
        lbNeg = new javax.swing.JLabel();
        lbSenSen = new javax.swing.JLabel();
        lbPerPos = new javax.swing.JLabel();
        lbPerNeg = new javax.swing.JLabel();
        lbAttSen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpData.setBorder(javax.swing.BorderFactory.createTitledBorder("Data"));

        txtaTest.setColumns(20);
        txtaTest.setRows(5);
        jScrollPane1.setViewportView(txtaTest);

        jTabbedPane1.addTab("Test", jScrollPane1);

        txtaClean.setColumns(20);
        txtaClean.setRows(5);
        jScrollPane2.setViewportView(txtaClean);

        jTabbedPane1.addTab("Data Cleaned", jScrollPane2);

        tbResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Sentences", "Subjectivity", "Sentiment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbResults.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbResultsMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbResults);

        jTabbedPane1.addTab("Result", jScrollPane5);

        txtSentence.setEditable(false);
        txtSentence.setColumns(20);
        txtSentence.setLineWrap(true);
        txtSentence.setRows(4);
        txtSentence.setWrapStyleWord(true);
        jScrollPane3.setViewportView(txtSentence);

        cbSubjectivity.setText("Subjectivity");
        cbSubjectivity.setEnabled(false);

        cbPassive.setText("Passive");
        cbPassive.setEnabled(false);

        cbPositive.setText("Positive");
        cbPositive.setEnabled(false);

        cbNegative.setText("Negative");
        cbNegative.setEnabled(false);

        javax.swing.GroupLayout jpDataLayout = new javax.swing.GroupLayout(jpData);
        jpData.setLayout(jpDataLayout);
        jpDataLayout.setHorizontalGroup(
            jpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jpDataLayout.createSequentialGroup()
                        .addComponent(cbSubjectivity)
                        .addGap(18, 18, 18)
                        .addComponent(cbPassive)
                        .addGap(18, 18, 18)
                        .addComponent(cbPositive)
                        .addGap(18, 18, 18)
                        .addComponent(cbNegative)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jpDataLayout.setVerticalGroup(
            jpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDataLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSubjectivity)
                    .addComponent(cbPassive)
                    .addComponent(cbPositive)
                    .addComponent(cbNegative))
                .addContainerGap())
        );

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(java.awt.SystemColor.activeCaption);
        jLabel13.setText("Type:");

        cbTypeData.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Default", "Education", "Movie", "Sport" }));
        cbTypeData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTypeDataActionPerformed(evt);
            }
        });

        btnFile.setText("File");
        btnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileActionPerformed(evt);
            }
        });

        btnClean.setText("Clean");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnAnalyze.setText("Analyze");
        btnAnalyze.setEnabled(false);
        btnAnalyze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyzeActionPerformed(evt);
            }
        });

        jpResults.setBorder(javax.swing.BorderFactory.createTitledBorder("Results"));

        jpSubjectivity.setBorder(javax.swing.BorderFactory.createTitledBorder("Subjectivity"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel2.setForeground(java.awt.SystemColor.activeCaption);
        jLabel2.setText("Subjective:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel4.setForeground(java.awt.SystemColor.activeCaption);
        jLabel4.setText("Passive:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel3.setForeground(java.awt.SystemColor.activeCaption);
        jLabel3.setText("~");

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel5.setForeground(java.awt.SystemColor.activeCaption);
        jLabel5.setText("~");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(java.awt.SystemColor.activeCaption);
        jLabel6.setText("Attention:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(java.awt.SystemColor.activeCaption);
        jLabel1.setText("Sentence:");

        lbSub.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbSub.setForeground(new java.awt.Color(153, 0, 0));
        lbSub.setText("0");

        lbPas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbPas.setForeground(new java.awt.Color(153, 0, 0));
        lbPas.setText("0");

        lbSenSub.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbSenSub.setForeground(new java.awt.Color(153, 0, 0));
        lbSenSub.setText("0");

        lbPerSub.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbPerSub.setForeground(new java.awt.Color(153, 0, 0));
        lbPerSub.setText("0%");

        lbPerPas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbPerPas.setForeground(new java.awt.Color(153, 0, 0));
        lbPerPas.setText("0%");

        lbAttSub.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbAttSub.setForeground(new java.awt.Color(153, 0, 0));

        javax.swing.GroupLayout jpSubjectivityLayout = new javax.swing.GroupLayout(jpSubjectivity);
        jpSubjectivity.setLayout(jpSubjectivityLayout);
        jpSubjectivityLayout.setHorizontalGroup(
            jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSubjectivityLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpSubjectivityLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbAttSub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpSubjectivityLayout.createSequentialGroup()
                        .addGroup(jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpSubjectivityLayout.createSequentialGroup()
                                .addGroup(jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbSenSub, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbSub, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jpSubjectivityLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbPas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPerSub, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(lbPerPas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jpSubjectivityLayout.setVerticalGroup(
            jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSubjectivityLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbSenSub))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(lbSub)
                    .addComponent(lbPerSub))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPas)
                    .addComponent(lbPerPas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSubjectivityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbAttSub))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jpSentiment.setBorder(javax.swing.BorderFactory.createTitledBorder("Sentiment"));

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel8.setForeground(java.awt.SystemColor.activeCaption);
        jLabel8.setText("Positive:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel10.setForeground(java.awt.SystemColor.activeCaption);
        jLabel10.setText("Negative:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel9.setForeground(java.awt.SystemColor.activeCaption);
        jLabel9.setText("~");

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel11.setForeground(java.awt.SystemColor.activeCaption);
        jLabel11.setText("~");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(java.awt.SystemColor.activeCaption);
        jLabel12.setText("Attention:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(java.awt.SystemColor.activeCaption);
        jLabel7.setText("Sentence:");

        lbPos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbPos.setForeground(new java.awt.Color(153, 0, 0));
        lbPos.setText("0");

        lbNeg.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbNeg.setForeground(new java.awt.Color(153, 0, 0));
        lbNeg.setText("0");

        lbSenSen.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbSenSen.setForeground(new java.awt.Color(153, 0, 0));
        lbSenSen.setText("0");

        lbPerPos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbPerPos.setForeground(new java.awt.Color(153, 0, 0));
        lbPerPos.setText("0%");

        lbPerNeg.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbPerNeg.setForeground(new java.awt.Color(153, 0, 0));
        lbPerNeg.setText("0%");

        lbAttSen.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbAttSen.setForeground(new java.awt.Color(153, 0, 0));

        javax.swing.GroupLayout jpSentimentLayout = new javax.swing.GroupLayout(jpSentiment);
        jpSentiment.setLayout(jpSentimentLayout);
        jpSentimentLayout.setHorizontalGroup(
            jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSentimentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpSentimentLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbSenSen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpSentimentLayout.createSequentialGroup()
                        .addGroup(jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpSentimentLayout.createSequentialGroup()
                                .addGroup(jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbPos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbNeg, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbPerPos, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                    .addComponent(lbPerNeg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(lbAttSen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jpSentimentLayout.setVerticalGroup(
            jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSentimentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lbSenSen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbPos)
                    .addComponent(jLabel9)
                    .addComponent(lbPerPos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lbNeg)
                    .addComponent(jLabel11)
                    .addComponent(lbPerNeg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSentimentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(lbAttSen))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpResultsLayout = new javax.swing.GroupLayout(jpResults);
        jpResults.setLayout(jpResultsLayout);
        jpResultsLayout.setHorizontalGroup(
            jpResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpResultsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpSubjectivity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpSentiment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpResultsLayout.setVerticalGroup(
            jpResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpSubjectivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpSentiment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(cbTypeData, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpResults, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnFile, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClean)
                        .addGap(18, 18, 18)
                        .addComponent(btnAnalyze)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(cbTypeData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAnalyze)
                            .addComponent(btnClean)
                            .addComponent(btnFile))
                        .addGap(18, 18, 18)
                        .addComponent(jpResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbResultsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbResultsMouseClicked
        try {
            cbNegative.setSelected(false);
            cbPassive.setSelected(false);
            cbPositive.setSelected(false);
            cbSubjectivity.setSelected(false);
            int row = tbResults.getSelectedRow();
            txtSentence.setText(tbResults.getModel().getValueAt(row, 1).toString());
            if (tbResults.getModel().getValueAt(row, 2).toString().equalsIgnoreCase("0.0")) {
                cbPassive.setSelected(true);
            } else {
                cbSubjectivity.setSelected(true);
                if (tbResults.getModel().getValueAt(row, 3).toString().equalsIgnoreCase("0.0")) {
                    cbNegative.setSelected(true);
                } else {
                    cbPositive.setSelected(true);
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tbResultsMouseClicked

    private void cbTypeDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTypeDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTypeDataActionPerformed

    private void btnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileActionPerformed
        JFileChooser chooser = new JFileChooser("");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = chooser.showOpenDialog((java.awt.Component) null);
        if (returnVal == chooser.APPROVE_OPTION) {
            File inFile = chooser.getSelectedFile();
            try {
                FileReader fr = new FileReader(inFile);
                BufferedReader br = new BufferedReader(fr);
                try {
                    txtaTest.read(br, null);
                } catch (IOException ex) {
                    Logger.getLogger(frmSentimentAnalysis.class.getName()).log(Level.SEVERE, null, ex);
                }
                txtaTest.requestFocus();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmSentimentAnalysis.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnFileActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        try (BufferedWriter bw = new BufferedWriter(new FileWriter("data\\dataProcessing\\subjectivity\\sen\\senTemp.txt"))) {
            bw.write(txtaTest.getText());
            bw.flush();
        } catch (IOException ex) {
            Logger.getLogger(frmSentimentAnalysis.class.getName()).log(Level.SEVERE, null, ex);
        }
        cleanDataForTrain();
        try {
            FileReader frSubTrain = new FileReader("data\\dataProcessing\\subjectivity\\sen\\sen.txt");
            try (BufferedReader br = new BufferedReader(frSubTrain)) {
                txtaClean.read(br, null);
            }
            txtaClean.requestFocus();
        } catch (IOException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnAnalyze.setEnabled(true);
    }//GEN-LAST:event_btnCleanActionPerformed

    private void btnAnalyzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyzeActionPerformed
        int subSen, subSub, subPas, senSen, senPos, senNeg;
        double subPerSub, subPerPas, senPerPos, senPerNeg;
        try {
            if (cbTypeData.getSelectedItem().toString().equalsIgnoreCase("Default")) {
                copyFileForTrain("default");
            }
            if (cbTypeData.getSelectedItem().toString().equalsIgnoreCase("Education")) {
                copyFileForTrain("education");
            }
            if (cbTypeData.getSelectedItem().toString().equalsIgnoreCase("Movie")) {
                copyFileForTrain("movie");
            }
            if (cbTypeData.getSelectedItem().toString().equalsIgnoreCase("Sport")) {
                copyFileForTrain("sport");
            }

            trainSubjectivityIndirectForSentence();
            //trainSubjectivityDirForSentence();
            subSen = readSentence(new File("senOUT.txt"), "data\\dataProcessing\\subjectivity\\sen\\");
                subSub = readResult(new File("outputSub"), "src\\Data\\", "1.0");
                    subPerSub = (double) subSub / subSen * 100;
                    subPas = subSen - subSub;
                    subPerPas = (double) 100 - subPerSub;
                    lbSenSub.setText(Integer.toString(subSen));
                    lbSub.setText(Integer.toString(subSub));
                    lbPerSub.setText((double) Math.round(subPerSub * 10) / 10 + "%");
                    lbPas.setText(Integer.toString(subPas));
                    lbPerPas.setText((double) Math.round(subPerPas * 10) / 10 + "%");
                    lbAttSub.setText(checkAttention(subPerSub));

                    exSentimentFileForSentence();
                    trainSentimentIndirectForSentence();
                    //trainSentimentDirForSentence();
                    senSen = readSentence(new File("senOUT.txt"), "data\\dataProcessing\\sentiment\\sen\\");
                        senPos = readResult(new File("outputSen"), "src\\Data\\", "1.0");
                            senPerPos = (double) senPos / senSen * 100;
                            senNeg = senSen - senPos;
                            senPerNeg = (double) 100 - senPerPos;
                            lbSenSen.setText(Integer.toString(senSen));
                            lbPos.setText(Integer.toString(senPos));
                            lbPerPos.setText((double) Math.round(senPerPos * 10) / 10 + "%");
                            lbNeg.setText(Integer.toString(senNeg));
                            lbPerNeg.setText((double) Math.round(senPerNeg * 10) / 10 + "%");
                            lbAttSen.setText(checkAttention(senPerPos));

                            showResults();
                        } catch (IOException ex) {
                            Logger.getLogger(frmSentimentAnalysis.class.getName()).log(Level.SEVERE, null, ex);
                        }
    }//GEN-LAST:event_btnAnalyzeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSentimentForPara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSentimentForPara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSentimentForPara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSentimentForPara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmSentimentForPara().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalyze;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnFile;
    private javax.swing.JCheckBox cbNegative;
    private javax.swing.JCheckBox cbPassive;
    private javax.swing.JCheckBox cbPositive;
    private javax.swing.JCheckBox cbSubjectivity;
    private javax.swing.JComboBox cbTypeData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel jpData;
    private javax.swing.JPanel jpResults;
    private javax.swing.JPanel jpSentiment;
    private javax.swing.JPanel jpSubjectivity;
    private javax.swing.JLabel lbAttSen;
    private javax.swing.JLabel lbAttSub;
    private javax.swing.JLabel lbNeg;
    private javax.swing.JLabel lbPas;
    private javax.swing.JLabel lbPerNeg;
    private javax.swing.JLabel lbPerPas;
    private javax.swing.JLabel lbPerPos;
    private javax.swing.JLabel lbPerSub;
    private javax.swing.JLabel lbPos;
    private javax.swing.JLabel lbSenSen;
    private javax.swing.JLabel lbSenSub;
    private javax.swing.JLabel lbSub;
    private javax.swing.JTable tbResults;
    private javax.swing.JTextArea txtSentence;
    private javax.swing.JTextArea txtaClean;
    private javax.swing.JTextArea txtaTest;
    // End of variables declaration//GEN-END:variables
}
