/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import static SentimentAnalysis.subjectivity.*;
import static SentimentAnalysis.sentiment.*;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import static main.main.*;

public class frmSentimentForPara extends javax.swing.JFrame {

    static DefaultTableModel modelResultsPara;

    /**
     * Creates new form frmSentimentForPara
     */
    public frmSentimentForPara() {
        initComponents();
        modelResultsPara = (DefaultTableModel) tbResultsPara.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpData = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaTestPara = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbResultsPara = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSentencePara = new javax.swing.JTextArea();
        cbSubjectivityPara = new javax.swing.JCheckBox();
        cbPassivePara = new javax.swing.JCheckBox();
        cbPositivePara = new javax.swing.JCheckBox();
        cbNegativePara = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        cbTypeDataPara = new javax.swing.JComboBox();
        btnFilePara = new javax.swing.JButton();
        btnCleanPara = new javax.swing.JButton();
        btnAnalyzePara = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpData.setBorder(javax.swing.BorderFactory.createTitledBorder("Data"));

        txtaTestPara.setColumns(20);
        txtaTestPara.setRows(5);
        jScrollPane1.setViewportView(txtaTestPara);

        jTabbedPane1.addTab("Test", jScrollPane1);

        tbResultsPara.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Sentences", "Subjectivity", "Sentiment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbResultsPara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbResultsParaMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbResultsPara);

        jTabbedPane1.addTab("Result", jScrollPane5);

        txtSentencePara.setEditable(false);
        txtSentencePara.setColumns(20);
        txtSentencePara.setLineWrap(true);
        txtSentencePara.setRows(4);
        txtSentencePara.setWrapStyleWord(true);
        jScrollPane3.setViewportView(txtSentencePara);

        cbSubjectivityPara.setText("Subjectivity");
        cbSubjectivityPara.setEnabled(false);

        cbPassivePara.setText("Passive");
        cbPassivePara.setEnabled(false);

        cbPositivePara.setText("Positive");
        cbPositivePara.setEnabled(false);

        cbNegativePara.setText("Negative");
        cbNegativePara.setEnabled(false);

        javax.swing.GroupLayout jpDataLayout = new javax.swing.GroupLayout(jpData);
        jpData.setLayout(jpDataLayout);
        jpDataLayout.setHorizontalGroup(
            jpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 748, Short.MAX_VALUE)
                    .addGroup(jpDataLayout.createSequentialGroup()
                        .addComponent(cbSubjectivityPara)
                        .addGap(18, 18, 18)
                        .addComponent(cbPassivePara)
                        .addGap(18, 18, 18)
                        .addComponent(cbPositivePara)
                        .addGap(18, 18, 18)
                        .addComponent(cbNegativePara)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jpDataLayout.setVerticalGroup(
            jpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDataLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSubjectivityPara)
                    .addComponent(cbPassivePara)
                    .addComponent(cbPositivePara)
                    .addComponent(cbNegativePara))
                .addContainerGap())
        );

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(java.awt.SystemColor.activeCaption);
        jLabel13.setText("Type:");

        cbTypeDataPara.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Default", "Education", "Movie", "Sport" }));
        cbTypeDataPara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTypeDataParaActionPerformed(evt);
            }
        });

        btnFilePara.setText("File");
        btnFilePara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileParaActionPerformed(evt);
            }
        });

        btnCleanPara.setText("Clean");
        btnCleanPara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanParaActionPerformed(evt);
            }
        });

        btnAnalyzePara.setText("Analyze");
        btnAnalyzePara.setEnabled(false);
        btnAnalyzePara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyzeParaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(cbTypeDataPara, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFilePara, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCleanPara)
                        .addGap(18, 18, 18)
                        .addComponent(btnAnalyzePara)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbTypeDataPara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnalyzePara)
                    .addComponent(btnCleanPara)
                    .addComponent(btnFilePara))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbTypeDataParaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTypeDataParaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTypeDataParaActionPerformed

    private void btnFileParaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileParaActionPerformed
        JFileChooser chooser = new JFileChooser("");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = chooser.showOpenDialog((java.awt.Component) null);
        if (returnVal == chooser.APPROVE_OPTION) {
            File inFile = chooser.getSelectedFile();
            try {
                FileReader fr = new FileReader(inFile);
                BufferedReader br = new BufferedReader(fr);
                try {
                    txtaTestPara.read(br, null);
                } catch (IOException ex) {
                    Logger.getLogger(frmSentimentAnalysis.class.getName()).log(Level.SEVERE, null, ex);
                }
                txtaTestPara.requestFocus();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmSentimentAnalysis.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnFileParaActionPerformed

    private void btnCleanParaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanParaActionPerformed
        try (BufferedWriter bw = new BufferedWriter(new FileWriter("data\\dataProcessing\\subjectivity\\sen\\senTemp.txt"))) {
            bw.write(txtaTestPara.getText());
            bw.flush();
        } catch (IOException ex) {
            Logger.getLogger(frmSentimentAnalysis.class.getName()).log(Level.SEVERE, null, ex);
        }
        cleanDataForTrain();
        btnAnalyzePara.setEnabled(true);
    }//GEN-LAST:event_btnCleanParaActionPerformed

    private void btnAnalyzeParaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyzeParaActionPerformed
        try {
            if (cbTypeDataPara.getSelectedItem().toString().equalsIgnoreCase("Default")) {
                copyFileForTrain("default");
            }
            if (cbTypeDataPara.getSelectedItem().toString().equalsIgnoreCase("Education")) {
                copyFileForTrain("education");
            }
            if (cbTypeDataPara.getSelectedItem().toString().equalsIgnoreCase("Movie")) {
                copyFileForTrain("movie");
            }
            if (cbTypeDataPara.getSelectedItem().toString().equalsIgnoreCase("Sport")) {
                copyFileForTrain("sport");
            }

            trainSubjectivityIndirectForSentence();
            //trainSubjectivityDirForSentence();

            exSentimentFileForSentence();
            trainSentimentIndirectForSentence();
            //trainSentimentDirForSentence();

            showResultsPara();
        } catch (IOException ex) {
            Logger.getLogger(frmSentimentAnalysis.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnalyzeParaActionPerformed

    private void tbResultsParaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbResultsParaMouseClicked
        try {
            cbNegativePara.setSelected(false);
            cbPassivePara.setSelected(false);
            cbPositivePara.setSelected(false);
            cbSubjectivityPara.setSelected(false);
            int row = tbResultsPara.getSelectedRow();
            txtSentencePara.setText(tbResultsPara.getModel().getValueAt(row, 1).toString());
            if (tbResultsPara.getModel().getValueAt(row, 2).toString().equalsIgnoreCase("0.0")) {
                cbPassivePara.setSelected(true);
            } else {
                cbSubjectivityPara.setSelected(true);
                if (tbResultsPara.getModel().getValueAt(row, 3).toString().equalsIgnoreCase("0.0")) {
                    cbNegativePara.setSelected(true);
                } else {
                    cbPositivePara.setSelected(true);
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tbResultsParaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSentimentForPara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSentimentForPara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSentimentForPara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSentimentForPara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmSentimentForPara().setVisible(true);
            }
        });
    }

    //--Hiển thị kết quả
    private void showResultsPara() throws IOException {
        modelResultsPara.setRowCount(0);
        String[][] arr = readResultsPara();
        for (int i = 0; i < arr.length; i++) {
            modelResultsPara.insertRow(modelResultsPara.getRowCount(),
                    new Object[]{Integer.toString(i + 1), arr[i][0], arr[i][1], arr[i][2]});
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalyzePara;
    private javax.swing.JButton btnCleanPara;
    private javax.swing.JButton btnFilePara;
    private javax.swing.JCheckBox cbNegativePara;
    private javax.swing.JCheckBox cbPassivePara;
    private javax.swing.JCheckBox cbPositivePara;
    private javax.swing.JCheckBox cbSubjectivityPara;
    private javax.swing.JComboBox cbTypeDataPara;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel jpData;
    private javax.swing.JTable tbResultsPara;
    private javax.swing.JTextArea txtSentencePara;
    private javax.swing.JTextArea txtaTestPara;
    // End of variables declaration//GEN-END:variables
}
